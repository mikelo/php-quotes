apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: quotes
  annotations:
    openshift.io/display-name: Quotes Application
    description: The Quotes application provides an HTTP API that returns a random, funny quote.
    iconClass: icon-php
    tags: php,mysql
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: quotesapi:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /
      git:
        uri: ${APP_GIT_URL}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: php:7.3-ubi7
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: ${SECRET}
      type: GitHub
    - generic:
        secret: ${SECRET}
      type: Generic
    - type: ConfigChange
    - imageChange:
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: quotesapi
      deploymentconfig: quotesapi
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
        labels:
          app: quotesapi
          deploymentconfig: quotesapi
      spec:
        containers:
        - env:
          - name: DATABASE_NAME
            value: quotesdb
          - name: DATABASE_PASSWORD
            value: ${PASSWORD}
          - name: DATABASE_SERVICE_NAME
            value: quotesdb
          - name: DATABASE_USER
            value: quoteapp
          imagePullPolicy: Always
          name: quotesapi
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - quotesapi
        from:
          kind: ImageStreamTag
          name: quotesapi:latest
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
    labels:
      app: quotesdb
    name: quotesdb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: quotesdb
      deploymentconfig: quotesdb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
        post:
          execNewPod:
            command:
              - /bin/sh
              - -c
              - |
                until mysqladmin ping -h quotesdb --silent; do
                  echo "Waiting for MySQL to be ready...";
                  sleep 2;
                done;
                mysql -u$MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE -h quotesdb -e "

                CREATE TABLE IF NOT EXISTS quote (
                    id INT PRIMARY KEY,
                    msg TEXT NOT NULL
                  );
                INSERT INTO quote (id, msg) VALUES
                (1, 'The only limit to our realization of tomorrow is our doubts of today.'),
                (2, 'Life is 10% what happens to us and 90% how we react to it.'),
                (3, 'Do not watch the clock. Do what it does. Keep going.'),
                (4, 'Success is not final, failure is not fatal: It is the courage to continue that counts.'),
                (5, 'What lies behind us and what lies before us are tiny matters compared to what lies within us.'),
                (6, 'The best way to predict the future is to invent it.'),
                (7, 'It always seems impossible until it is done.'),
                (8, 'If you want to lift yourself up, lift up someone else.'),
                (9, 'Start where you are. Use what you have. Do what you can.'),
                (10, 'In the end, we will remember not the words of our enemies, but the silence of our friends.'),
                (11, 'The only way to do great work is to love what you do.'),
                (12, 'The purpose of life is not to be happy. It is to be useful, to be honorable, to be compassionate, to have it make some difference.'),
                (13, 'Happiness is not something ready-made. It comes from your own actions.'),
                (14, 'Do not go where the path may lead, go instead where there is no path and leave a trail.'),
                (15, 'The only person you are destined to become is the person you decide to be.'),
                (16, 'Act as if what you do makes a difference. It does.'),
                (17, 'Everything you’ve ever wanted is on the other side of fear.'),
                (18, 'Do what you can, with what you have, where you are.'),
                (19, 'Don’t watch the clock; do what it does. Keep going.'),
                (20, 'Strive not to be a success, but rather to be of value.');"
          failurePolicy: Ignore
      type: Rolling
    template:
      metadata:
        annotations:
        labels:
          app: quotesdb
          deploymentconfig: quotesdb
      spec:
        containers:
        - env:
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: quotes
          - name: MYSQL_DATABASE
            value: quotesdb
          - name: MYSQL_PASSWORD
            value: ${PASSWORD}
          - name: MYSQL_USER
            value: quoteapp
          imagePullPolicy: IfNotPresent
          name: quotesdb
          ports:
          - containerPort: 3306
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql/
            name: quotesdb-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: quotesdb-volume-1
          persistentVolumeClaim:
            claimName: quotesdb-claim
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - quotesdb
        from:
          kind: ImageStreamTag
          name: mysql:5.7
          namespace: myregistry
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: quotesapi
      deploymentconfig: quotesapi
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: quotesdb
    name: quotesdb
  spec:
    ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      app: quotesdb
      deploymentconfig: quotesdb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
    labels:
      app: quotesapi
    name: quotesapi
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: quotesapi
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
    name: quotesdb-claim
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 300Mi
    # storageClassName: gp2
    volumeMode: Filesystem
parameters:
- name: APP_GIT_URL
  displayName: Application Source Git URL
  description: The Git URL of the application source code
  required: true
  value: https://github.com/tsrana/php-quotes
- name: PASSWORD
  displayName: Database Password
  description: Password to access the database
  generate: expression
  from: '[a-zA-Z0-9]{16}'
- name: SECRET
  displayName: Webhook Secret
  description: Secret for webhooks
  generate: expression
  from: '[a-zA-Z0-9]{40}'
